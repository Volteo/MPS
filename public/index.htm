<!-- 
/*********************************************************************
* Copyright (c) Intel Corporation 2019
* SPDX-License-Identifier: Apache-2.0
**********************************************************************/
 -->

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>MPS Micro Service</title>
    <link rel="stylesheet" href="styles/style.css">
    <link rel="stylesheet" href="styles/bootstrap.min.css">
</head>

<body>
    <nav class="navbar navbar-expand-sm navbar-fixed-top" style="background-color:#003c71;">
        <div class="container-fluid">
            <a href="/" class="navbar-brand" style="font-size: 18pt;color: #ffffff;">MPS Micro Service</a>
            <ul class="navbar-nav flex-row float-right">
                <li class="nav-item">
                    <a class="nav-link" style="color: #ffffff" href="#" onclick='fileDownload("MEScript","cira_setup.mescript"); return false;'>Download MESCRIPT</a>
                </li>
            </ul>
        </div>
    </nav>
    <div class="container-fluid">
        <div id="xdevices" class="devices-flex-container"></div>
    </div>
    <!-- Modal For General Information and REST API's-->
    <div class="modal fade" id="mps-device-modal" data-backdrop="static" tabindex="-1" role="dialog"
        aria-labelledby="mps-device-modal-title" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header" style="background-color: #003c71">
                    <ul id="mps-device-tabs" class="nav nav-tabs">
                        <li class="nav-item">
                            <a id="geninfo-tab" class="nav-link active" href="javascript:void(0)">General Info</a>
                        </li>
                        <li class="nav-item">
                            <a id="restapi-tab" class="nav-link" href="javascript:void(0)">REST API</a>
                        </li>
                    </ul>
                    <div>
                        <button type="button" class="btn btn-danger" onclick="closeDeviceInfo()" data-dismiss="modal"
                            aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                </div>
                <div class="modal-body">
                    <div id="geninfo-body">
                        <div class="row">
                            <div class="col">
                                <div class="card">
                                    <div class="card-body">
                                        <table class="table table-sm" style="margin-bottom: 0px">
                                            <thead class="thead-light">
                                                <tr>
                                                    <th style='font-weight: bold;'>Attribute</th>
                                                    <th>Value</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td>Name</td>
                                                    <td id='dev_name'></td>
                                                </tr>
                                                <tr>
                                                    <td>GUID</td>
                                                    <td id='dev_guid'></td>
                                                </tr>
                                                <tr>
                                                    <td>MPS Username</td>
                                                    <td id='dev_musername'></td>
                                                </tr>
                                                <tr>
                                                    <td>MPS Password</td>
                                                    <td id='dev_mpass'></td>
                                                </tr>
                                                <tr>
                                                    <td>AMT Username</td>
                                                    <td id='dev_ausername'></td>
                                                </tr>
                                                <tr>
                                                    <td>AMT Password</td>
                                                    <td id='dev_apass'></td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="restapi-body" style="display: none">
                        <div class="row" style="margin-bottom: 10px">
                            <div class="col">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="form">
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <div class="form-group">
                                                        <select class="form-control" id="restapi-sel">
                                                            <option selected>Select API...</option>
                                                            <option value="Version">Version</option>
                                                            <option value="HardwareInformation">Hardware Info</option>
                                                            <option value="PowerCapabilities">Power Capabilities
                                                            </option>
                                                            <option value="PowerState">Power State</option>
                                                            <option value="AuditLog">Audit logs</option>
                                                            <option value="EventLog">Event logs</option>
                                                            <option value="PowerAction">Power Action</option>
                                                            <option value="GeneralSettings">General settings</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4" style="display: none" id="poweraction-container">
                                                    <div class="form-group">
                                                        <select class="form-control" id="poweraction-sel">
                                                            <option selected>Action...</option>
                                                            <option value=2>Power up</option>
                                                            <option value=4>Sleep</option>
                                                            <option value=5>Power cycle</option>
                                                            <option value=7>Hibernate</option>
                                                            <option value=8>Power down</option>
                                                            <option value=10>Reset</option>
                                                            <option value=12>Soft-off</option>
                                                            <option value=14>Soft-reset</option>
                                                            <option value=100>Power up to BIOS</option>
                                                            <option value=101>Reset to BIOS</option>
                                                        </select>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <button type="button" id="exec-restapi-btn"
                                                        class="btn btn-info">Execute</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row" id="respapi-resp-container" style="display: none">
                            <div class="col">
                                <div class="card">
                                    <h5 class="card-header">
                                        <ul id="rest-resp-tabs" class="nav nav-tabs">
                                            <li class="nav-item">
                                                <a id="json-tab" class="nav-link active"
                                                    href="javascript:void(0)">JSON</a>
                                            </li>
                                            <!-- <li class="nav-item">
                                                <a id="html-tab" class="nav-link" href="javascript:void(0)">HTML</a>
                                            </li> -->
                                        </ul>
                                    </h5>
                                    <div class="card-body" id="respapi-resp-body">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer" style="display: inline">
                    <a id="kvmtab" class="btn btn-primary" rel="noopener noreferrer" target="_blank" href="#" role="button">Connect to KVM</a>
                    <span style="float: right">
                        <button type="button" class="btn btn-danger" onclick="closeDeviceInfo()"
                            data-dismiss="modal">Close</button>
                    </span>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div id="mps_footer">
        </div>
    </div>
</body>
<script src="scripts/jquery-3.3.1.min.js"></script>
<script src="scripts/bootstrap.bundle.min.js"></script>
<script type="text/javascript">
    var ctrl_ws = null;//JSON control channel
    var retry_timer = 0;
    var computerlist = [];
    var computerHash = {};
    var currentdevice = null;

    function fileDownload(api, fileName) {
        let payload = {};
        if(api=="MeshCmd" && fileName=="MeshCmd"){
            payload= {
                env: 'linux'
            }
        }else{
            payload= {
                env: 'windows'
            } 
        }
        var postdata ={
            apikey: 'xxxxx',
            method: api,
            payload: payload          
        }
        $.ajax({
        url: '/admin',
        method: 'POST',
        data: JSON.stringify(postdata),
        contentType: "application/json",
        success: function (data) {
            console.log(data)
            var blob = new Blob([data], {type: "application/octet-stream"});
            var url = window.URL.createObjectURL(blob);
            var a = document.createElement('a');
            a.setAttribute('hidden', '');
            a.setAttribute('href', url);
            a.setAttribute('download', fileName);
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);
        },
        error: function(error){
            console.log(error);
        }
    });
}
    //GET/POST RESTAPI request for a device.
    $('#exec-restapi-btn').click(function (e) {
        var postdata;
        var uuid = $("#dev_guid").text();
        var api = $("#restapi-sel option:selected").val();
        if(api=='PowerAction'){
            postdata ={
                apikey: 'xxxxx',
                method: api,
                payload: {
                    guid: uuid,
                    action: $("#poweraction-sel option:selected").val()
                }            
            }

        }else{
            postdata ={
                apikey: 'xxxxx',
                method: api,
                payload: {
                    guid: uuid
                }            
            }
        }
        var options = {
            type: "POST",
            url: '/amt',
            data: JSON.stringify(postdata),
            contentType: "application/json",
            success: function (data) {
                $('#respapi-resp-body').html(ObjectToString(data));
                $('#respapi-resp-container').show();
            },
            error: function (error) {
                $('#respapi-resp-body').html(ObjectToString(error.responseText));
                $('#respapi-resp-container').show();
            }
        };
        $.ajax(options);
    });

    //OnClick Device Tab In Modal
    $('#mps-device-tabs li').click(function (e) {
        var tab_id = $(this).find('a')[0].id;
        var elements = $('#mps-device-tabs').find('a');
        for (var i = 0; i < elements.length; i++) {
            if (tab_id == elements[i].id) {
                if (!$('#' + tab_id).attr('class').split(/\s+/).includes("active")) {
                    $('#' + tab_id).addClass("active");
                    $('#' + tab_id.split("-")[0] + "-body").show();
                } else {
                    break;
                }
            }
            else {
                $("#" + elements[i].id).removeClass().addClass("nav-link");
                $('#' + elements[i].id.split("-")[0] + "-body").hide();
            }
        }
    });

    //OnChange RESTAPI option- show/hide Action dropdown
    $('#restapi-sel').change(function (e) {
        var api = $(this).val();
        if (api == 'PowerAction') {
            $('#poweraction-container').show();
        }
        else {
            $('#poweraction-container').hide();
        }
    });

    // radio button change handler
    function radiochanged(param) {
        computerHash[param.value].checked = true;
        Q('kvmtab').href = 'sample/sampleKVM.htm?deviceId=' + computerHash[param.value].host + '&server=' + self.location.host;
        QH('dev_name', computerHash[param.value].name);
        QH('dev_guid', computerHash[param.value].host);
        QH('dev_musername', '*****');
        QH('dev_mpass', '*****');
        QH('dev_ausername', computerHash[param.value].amtuser);
        QH('dev_apass', '*****');
        $('#mps-device-modal').modal('show');
    }
    
    function clearradio() {
        var items = document.getElementsByName('select_device_radio');
        for (var i in items) {
            if (items[i].checked == true) {
                computerHash[items[i].value].checked = false;
                items[i].checked = false;
            }
        }
    }

    //Cleanup Device Info
    function closeDeviceInfo() {
        clearradio();
        $('#mps-device-modal').modal('hide');
        $('#respapi-resp-container').hide();
        $('#respapi-resp-body').text("");
        $('#poweraction-container').hide();
        $('#restapi-sel option:eq(0)').prop('selected', true);
        $('#poweraction-sel option:eq(0)').prop('selected', true);
    }

    // update device list
    function updateDeviceList() {
        QH("xdevices", "");// clear out list container
        computerHash = {};
        for (var i = 0; i < computerlist.length; i++) {
            var str = "<div class='device-flex' style='width:200px' id='" + (computerlist[i].host) + "'>";
            str += "<input type='radio' name='select_device_radio' value='" + computerlist[i].host + "' onchange='radiochanged(this)'>&nbsp;";
            if (!computerlist[i].icon) { computerlist[i].icon = 1; }
            if (computerlist[i].conn != null && computerlist[i].conn != 0) {
                str += "<img class='icon_on' src='images/icons200-" + computerlist[i].icon + "-1.png'>&nbsp;";
            } else {
                str += "<img class='icon_off' src='images/icons200-" + computerlist[i].icon + "-1.png'>&nbsp;";
            }
            if (computerlist[i].name) {
                str += "<div style='font-size: smaller;word-break:break-all;'>" + computerlist[i].name + "</div>";
            } else {
                str += "<div style='font-size: smaller;word-break:break-all;'>" + computerlist[i].host + "</div>";
            }
            computerHash[computerlist[i].host] = computerlist[i];
            str += "</div>";
            QA("xdevices", str);
        }
    }

    // fetch devices list, copied from Ylian's remote.htm 
    function loadDeviceList() {
        var request = new XMLHttpRequest();
        request.onload = function () {
            if (request.status >= 200 && request.status < 400) {
                // Success
                var serverComputerList = JSON.parse(request.responseText);
                if (serverComputerList && serverComputerList != null && serverComputerList instanceof Array) {
                    currentcomputer = null;
                    computerlist = [];
                    for (var i in serverComputerList) {
                        var computer = serverComputerList[i];
                        if (computer['host']) {
                            computer.checked = false;
                            if (!computer['h']) computer['h'] = Math.random(); // If "h" handle is not present, create one.
                            if (!computer['tls']) computer['tls'] = 0; // If TLS is not present, assume 0.
                            computerlist.push(computer);
                        }
                    }
                    updateDeviceList();
                }
            } else {
                console.log('Failed to get server computer list');
            }
        };

        request.onerror = function () {
            console.log('Failed to get server computer list');
        };
        var data ={
            "apikey": "xxxxx",
            "method": "AllDevices",
            "payload": {}	};
        // request.open('GET', 'webrelay.ashx?action=getallcomputer', true);

        request.open('POST', '/admin', true)
        request.setRequestHeader("Content-Type", "application/json");
        request.send(JSON.stringify(data));
    }

    // init persistent JSON control channel for receiving notification
    function initControlChannel() {
        ctrl_ws = new WebSocket(window.location.protocol.replace("http", "ws") + "//" + window.location.host + window.location.pathname.substring(0, window.location.pathname.lastIndexOf('/')) + "/notifications/control.ashx");
        ctrl_ws.onopen = function (evt) {
            if (retry_timer != 0) {
                console.log("Clearing retry timer.");
                clearInterval(retry_timer);
                retry_timer = 0;
            }
            //console.log(JSON.stringify(evt));              
        }
        ctrl_ws.onmessage = function (evt) {
            //console.log(JSON.stringify(evt.data));
            setTimeout(function () { loadDeviceList(); }, 200);
        }
        ctrl_ws.onclose = function () {
            console.log("Control channel closed, retying connection in 5 seconds.");
            retry_timer = setInterval(function () {
                console.log("Retrying again.");
                initControlChannel();
            }, 5000);
        }
    }

    function startup() {
        loadDeviceList();
        initControlChannel();
    };

    // Print object for HTML
    function ObjectToStringEx(x, c) {
        var r = "";
        if (x != 0 && (!x || x == null)) return "(Null)";
        if (x instanceof Array) {
            r += '['; c += 1;
            for (var i in x) {
                r += '<br>' + gap(c) + ObjectToStringEx(x[i], c);
            }
            if (r[r.length - 1] === ',') { r = r.substring(0, r.length - 1); }
            c -= 1;
            r += '<br>' + gap(c) + '],';
        }
        else if (x instanceof Object) {
            r += '{'; c += 1;
            for (var i in x) {
                r += '<br>' + gap(c) + '\'' + i + '\'' + " : " + ObjectToStringEx(x[i], c);
            }
            if (r[r.length - 1] === ',') { r = r.substring(0, r.length - 1); }
            c -= 1;
            r += '<br>' + gap(c) + '},';
        }
        else {
            r += EscapeHtml(x) + ',';
        }
        return r;
    }

    // Create an ident gap
    function gap(c) { var x = ''; for (var i = 0; i < (c * 4); i++) { x += '&nbsp;'; } return x; }

    function EscapeHtml(x) {
        if (typeof x == "string")
            return '\'' + x.replace(/&/g, '&amp;').replace(/>/g, '&gt;').replace(/</g, '&lt;').replace(/"/g, '&quot;').replace(/'/g, '&apos;') + '\'';
        if (typeof x == "boolean") return x;
        if (typeof x == "number") return x;
    }

    // Print an object in html
    function ObjectToString(x) {
        var r = ObjectToStringEx(x, 0);
        if (r[r.length - 1] === ',') { r = r.substring(0, r.length - 1); }
        return "<p>" + r + "</p>";
    }

    startup();

    // Quick UI functions, a bit of a replacement for jQuery
    function Q(x) { return document.getElementById(x); }                            // "Q"
    function QS(x) { try { return Q(x).style; } catch (x) { } }                     // "Q" style
    function QE(x, y) { try { Q(x).disabled = !y; } catch (x) { } }                 // "Q" enable
    function QV(x, y) { try { QS(x).display = (y ? '' : 'none'); } catch (x) { } }  // "Q" visible
    function QA(x, y) { Q(x).innerHTML += y; }                                      // "Q" append
    function QH(x, y) { Q(x).innerHTML = y; }                                       // "Q" html

</script>

</html>